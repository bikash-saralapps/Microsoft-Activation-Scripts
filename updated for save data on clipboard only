' VBA Macro to Convert Selected Preeti Font Text to Nepali Unicode
' Version: 15.0 (Windows ONLY - Final, Copy-Only Method)
' This macro converts the selected text and copies the result to the clipboard
' WITHOUT modifying the original document.

Option Explicit

' =========================================================================================
'                                   GLOBAL DECLARATIONS
' =========================================================================================

' Declare arrays at the module level to make them accessible to all functions.
Private array_one(0 To 160) As String
Private array_two(0 To 160) As String
Private arrays_initialized As Boolean

' A custom data type to hold information about each font segment.
Private Type FontSegment
    Text As String
    FontName As String
    StartIndex As Long
    Length As Long
End Type


' =========================================================================================
'                             CONVERSION ARRAY INITIALIZATION
' =========================================================================================

Private Sub InitializeConversionArrays()
    ' Populates the Preeti-to-Unicode mapping arrays one element at a time
    ' to create the most robust and error-free code for the VBA compiler.
    
    array_one(0) = "ç": array_two(0) = ChrW(&H950)
    array_one(1) = "˜": array_two(1) = ChrW(&H93D)
    array_one(2) = ".": array_two(2) = ChrW(&H964)
    array_one(3) = "'m": array_two(3) = "m'"
    array_one(4) = "]m": array_two(4) = "m]"
    array_one(5) = "Fmf": array_two(5) = "mfF"
    array_one(6) = "Fm": array_two(6) = "mF"
    array_one(7) = ")": array_two(7) = ChrW(&H966)
    array_one(8) = "!": array_two(8) = ChrW(&H967)
    array_one(9) = "@": array_two(9) = ChrW(&H968)
    array_one(10) = "#": array_two(10) = ChrW(&H969)
    array_one(11) = "$": array_two(11) = ChrW(&H96A)
    array_one(12) = "%": array_two(12) = ChrW(&H96B)
    array_one(13) = "^": array_two(13) = ChrW(&H96C)
    array_one(14) = "&": array_two(14) = ChrW(&H96D)
    array_one(15) = "*": array_two(15) = ChrW(&H96E)
    array_one(16) = "(": array_two(16) = ChrW(&H96F)
    array_one(17) = "k|m": array_two(17) = ChrW(&H92B) & ChrW(&H94D) & ChrW(&H930)
    array_one(18) = "em": array_two(18) = ChrW(&H91D)
    array_one(19) = "km": array_two(19) = ChrW(&H92B)
    array_one(20) = "Qm": array_two(20) = ChrW(&H915) & ChrW(&H94D) & ChrW(&H924)
    array_one(21) = "qm": array_two(21) = ChrW(&H915) & ChrW(&H94D) & ChrW(&H930)
    array_one(22) = "N˜": array_two(22) = ChrW(&H932)
    array_one(23) = "¡": array_two(23) = ChrW(&H91C) & ChrW(&H94D) & ChrW(&H91E) & ChrW(&H94D)
    array_one(24) = "¢": array_two(24) = ChrW(&H926) & ChrW(&H94D) & ChrW(&H918)
    array_one(25) = "1": array_two(25) = ChrW(&H91C) & ChrW(&H94D) & ChrW(&H91E)
    array_one(26) = "2": array_two(26) = ChrW(&H926) & ChrW(&H94D) & ChrW(&H926)
    array_one(27) = "4": array_two(27) = ChrW(&H926) & ChrW(&H94D) & ChrW(&H927)
    array_one(28) = ">": array_two(28) = ChrW(&H936) & ChrW(&H94D) & ChrW(&H930)
    array_one(29) = "?": array_two(29) = ChrW(&H930) & ChrW(&H941)
    array_one(30) = "B": array_two(30) = ChrW(&H926) & ChrW(&H94D) & ChrW(&H92F)
    array_one(31) = "I": array_two(31) = ChrW(&H915) & ChrW(&H94D) & ChrW(&H937) & ChrW(&H94D)
    array_one(32) = "Q": array_two(32) = ChrW(&H924) & ChrW(&H94D) & ChrW(&H924)
    array_one(33) = "ß": array_two(33) = ChrW(&H926) & ChrW(&H94D) & ChrW(&H92E)
    array_one(34) = "q": array_two(34) = ChrW(&H924) & ChrW(&H94D) & ChrW(&H930)
    array_one(35) = "„": array_two(35) = ChrW(&H927) & ChrW(&H94D) & ChrW(&H930)
    array_one(36) = "‹": array_two(36) = ChrW(&H919) & ChrW(&H94D) & ChrW(&H918)
    array_one(37) = "•": array_two(37) = ChrW(&H921) & ChrW(&H94D) & ChrW(&H921)
    array_one(38) = "›": array_two(38) = ChrW(&H926) & ChrW(&H94D) & ChrW(&H930)
    array_one(39) = "§": array_two(39) = ChrW(&H91F) & ChrW(&H94D) & ChrW(&H91F)
    array_one(40) = "°": array_two(40) = ChrW(&H921) & ChrW(&H94D) & ChrW(&H922)
    array_one(41) = "¶": array_two(41) = ChrW(&H920) & ChrW(&H94D) & ChrW(&H920)
    array_one(42) = "¿": array_two(42) = ChrW(&H930) & ChrW(&H942)
    array_one(43) = "Å": array_two(43) = ChrW(&H939) & ChrW(&H943)
    array_one(44) = "Ë": array_two(44) = ChrW(&H919) & ChrW(&H94D) & ChrW(&H917)
    array_one(45) = "Ì": array_two(45) = ChrW(&H924) & ChrW(&H94D) & ChrW(&H930)
    array_one(46) = "Í": array_two(46) = ChrW(&H919) & ChrW(&H94D) & ChrW(&H915)
    array_one(47) = "Î": array_two(47) = ChrW(&H919) & ChrW(&H94D) & ChrW(&H916)
    array_one(48) = "Ý": array_two(48) = ChrW(&H91F) & ChrW(&H94D) & ChrW(&H920)
    array_one(49) = "å": array_two(49) = ChrW(&H926) & ChrW(&H94D) & ChrW(&H935)
    array_one(50) = "6«": array_two(50) = ChrW(&H91F) & ChrW(&H94D) & ChrW(&H930)
    array_one(51) = "7«": array_two(51) = ChrW(&H920) & ChrW(&H94D) & ChrW(&H930)
    array_one(52) = "8«": array_two(52) = ChrW(&H921) & ChrW(&H94D) & ChrW(&H930)
    array_one(53) = "9«": array_two(53) = ChrW(&H922) & ChrW(&H94D) & ChrW(&H930)
    array_one(54) = "Ø": array_two(54) = ChrW(&H94D) & ChrW(&H92F)
    array_one(55) = "|": array_two(55) = ChrW(&H94D) & ChrW(&H930)
    array_one(56) = "8Þ": array_two(56) = ChrW(&H921) & ChrW(&H93C)
    array_one(57) = "9Þ": array_two(57) = ChrW(&H922) & ChrW(&H93C)
    array_one(58) = "S": array_two(58) = ChrW(&H915) & ChrW(&H94D)
    array_one(59) = "s": array_two(59) = ChrW(&H915)
    array_one(60) = "V": array_two(60) = ChrW(&H916) & ChrW(&H94D)
    array_one(61) = "v": array_two(61) = ChrW(&H916)
    array_one(62) = "U": array_two(62) = ChrW(&H917) & ChrW(&H94D)
    array_one(63) = "u": array_two(63) = ChrW(&H917)
    array_one(64) = "£": array_two(64) = ChrW(&H918) & ChrW(&H94D)
    array_one(65) = "3": array_two(65) = ChrW(&H918)
    array_one(66) = "ª": array_two(66) = ChrW(&H919)
    array_one(67) = "R": array_two(67) = ChrW(&H91A) & ChrW(&H94D)
    array_one(68) = "r": array_two(68) = ChrW(&H91A)
    array_one(69) = "5": array_two(69) = ChrW(&H91B)
    array_one(70) = "H": array_two(70) = ChrW(&H91C) & ChrW(&H94D)
    array_one(71) = "h": array_two(71) = ChrW(&H91C)
    array_one(72) = "‰": array_two(72) = ChrW(&H91D) & ChrW(&H94D)
    array_one(73) = "´": array_two(73) = ChrW(&H91D)
    array_one(74) = "~": array_two(74) = ChrW(&H91E) & ChrW(&H94D)
    array_one(75) = "`": array_two(75) = ChrW(&H91E)
    array_one(76) = "6": array_two(76) = ChrW(&H91F)
    array_one(77) = "7": array_two(77) = ChrW(&H920)
    array_one(78) = "8": array_two(78) = ChrW(&H921)
    array_one(79) = "9": array_two(79) = ChrW(&H922)
    array_one(80) = "0": array_two(80) = ChrW(&H923) & ChrW(&H94D)
    array_one(81) = "T": array_two(81) = ChrW(&H924) & ChrW(&H94D)
    array_one(82) = "t": array_two(82) = ChrW(&H924)
    array_one(83) = "Y": array_two(83) = ChrW(&H925) & ChrW(&H94D)
    array_one(84) = "y": array_two(84) = ChrW(&H925)
    array_one(85) = "b": array_two(85) = ChrW(&H926)
    array_one(86) = "W": array_two(86) = ChrW(&H927) & ChrW(&H94D)
    array_one(87) = "w": array_two(87) = ChrW(&H927)
    array_one(88) = "G": array_two(88) = ChrW(&H928) & ChrW(&H94D)
    array_one(89) = "g": array_two(89) = ChrW(&H928)
    array_one(90) = "K": array_two(90) = ChrW(&H92A) & ChrW(&H94D)
    array_one(91) = "k": array_two(91) = ChrW(&H92A)
    array_one(92) = "ˆ": array_two(92) = ChrW(&H92B) & ChrW(&H94D)
    array_one(93) = "A": array_two(93) = ChrW(&H92C) & ChrW(&H94D)
    array_one(94) = "a": array_two(94) = ChrW(&H92C)
    array_one(95) = "E": array_two(95) = ChrW(&H92D) & ChrW(&H94D)
    array_one(96) = "e": array_two(96) = ChrW(&H92D)
    array_one(97) = "D": array_two(97) = ChrW(&H92E) & ChrW(&H94D)
    array_one(98) = "d": array_two(98) = ChrW(&H92E)
    array_one(99) = "o": array_two(99) = ChrW(&H92F)
    array_one(100) = "/": array_two(100) = ChrW(&H930)
    array_one(101) = "N": array_two(101) = ChrW(&H932) & ChrW(&H94D)
    array_one(102) = "n": array_two(102) = ChrW(&H932)
    array_one(103) = "J": array_two(103) = ChrW(&H935) & ChrW(&H94D)
    array_one(104) = "j": array_two(104) = ChrW(&H935)
    array_one(105) = "Z": array_two(105) = ChrW(&H936) & ChrW(&H94D)
    array_one(106) = "z": array_two(106) = ChrW(&H936)
    array_one(107) = "i": array_two(107) = ChrW(&H937) & ChrW(&H94D)
    array_one(108) = ":": array_two(108) = ChrW(&H938) & ChrW(&H94D)
    array_one(109) = ";": array_two(109) = ChrW(&H938)
    array_one(110) = "X": array_two(110) = ChrW(&H939) & ChrW(&H94D)
    array_one(111) = "x": array_two(111) = ChrW(&H939)
    array_one(112) = "cf‘": array_two(112) = ChrW(&H911)
    array_one(113) = "c‘f": array_two(113) = ChrW(&H911)
    array_one(114) = "cf}": array_two(114) = ChrW(&H914)
    array_one(115) = "cf]": array_two(115) = ChrW(&H913)
    array_one(116) = "cf": array_two(116) = ChrW(&H906)
    array_one(117) = "c": array_two(117) = ChrW(&H905)
    array_one(118) = "O{": array_two(118) = ChrW(&H908)
    array_one(119) = "O": array_two(119) = ChrW(&H907)
    array_one(120) = "pm": array_two(120) = ChrW(&H90A)
    array_one(121) = "p": array_two(121) = ChrW(&H909)
    array_one(122) = "C": array_two(122) = ChrW(&H90B)
    array_one(123) = "P]": array_two(123) = ChrW(&H910)
    array_one(124) = "P": array_two(124) = ChrW(&H90F)
    array_one(125) = "f‘": array_two(125) = ChrW(&H949)
    array_one(126) = """": array_two(126) = ChrW(&H942)
    array_one(127) = "'": array_two(127) = ChrW(&H941)
    array_one(128) = "+": array_two(128) = ChrW(&H902)
    array_one(129) = "f": array_two(129) = ChrW(&H93E)
    array_one(130) = "[": array_two(130) = ChrW(&H943)
    array_one(131) = "\": array_two(131) = ChrW(&H94D)
    array_one(132) = "]": array_two(132) = ChrW(&H947)
    array_one(133) = "}": array_two(133) = ChrW(&H948)
    array_one(134) = "F": array_two(134) = ChrW(&H901)
    array_one(135) = "L": array_two(135) = ChrW(&H940)
    array_one(136) = "M": array_two(136) = ChrW(&H903)
    array_one(137) = "्ा": array_two(137) = ""
    array_one(138) = "्ो": array_two(138) = ChrW(&H947)
    array_one(139) = "्ौ": array_two(139) = ChrW(&H948)
    array_one(140) = "अो": array_two(140) = ChrW(&H913)
    array_one(141) = "अा": array_two(141) = ChrW(&H906)
    array_one(142) = "आै": array_two(142) = ChrW(&H914)
    array_one(143) = "आे": array_two(143) = ChrW(&H913)
    array_one(144) = "ाो": array_two(144) = ChrW(&H94B)
    array_one(145) = "ाॅ": array_two(145) = ChrW(&H949)
    array_one(146) = "ाे": array_two(146) = ChrW(&H94B)
    array_one(147) = "ंु": array_two(147) = ChrW(&H941) & ChrW(&H902)
    array_one(148) = "ेे": array_two(148) = ChrW(&H947)
    array_one(149) = "अै": array_two(149) = ChrW(&H905) & ChrW(&H948)
    array_one(150) = "ाे": array_two(150) = ChrW(&H94B)
    array_one(151) = "अे": array_two(151) = ChrW(&H905) & ChrW(&H947)
    array_one(152) = "ंा": array_two(152) = ChrW(&H93E) & ChrW(&H902)
    array_one(153) = "अॅ": array_two(153) = ChrW(&H905) & ChrW(&H945)
    array_one(154) = "ाै": array_two(154) = ChrW(&H94C)
    array_one(155) = "ैा": array_two(155) = ChrW(&H94C)
    array_one(156) = "ंृ": array_two(156) = ChrW(&H943) & ChrW(&H902)
    array_one(157) = "ँा": array_two(157) = ChrW(&H93E) & ChrW(&H901)
    array_one(158) = "ँू": array_two(158) = ChrW(&H942) & ChrW(&H901)
    array_one(159) = "ेा": array_two(159) = ChrW(&H94B)
    array_one(160) = "ंे": array_two(160) = ChrW(&H947) & ChrW(&H902)

    arrays_initialized = True
End Sub


' =========================================================================================
'                             CORE PREETI CONVERSION LOGIC
' =========================================================================================

Private Function ConvertPreetiText(ByVal inputText As String) As String
    ' This function takes a string of Preeti text and returns a Unicode string.
    Dim modified_substring As String
    Dim i As Long
    Dim position As Long
    Dim text_to_replace As String
    Dim char_next As String
    Dim set_of_matras As String
    Dim probable_pos As Long
    Dim char_at_probable_pos As String
    Dim new_replacement As String

    modified_substring = inputText

    ' 1. Main character-for-character replacement loop.
    For i = LBound(array_one) To UBound(array_one)
        modified_substring = Replace(modified_substring, array_one(i), array_two(i))
    Next i

    ' 2. Special handling for the short 'i' matra (l).
    position = InStr(1, modified_substring, "l")
    While position > 0
        If position < Len(modified_substring) Then
            char_next = Mid(modified_substring, position + 1, 1)
            text_to_replace = "l" & char_next
            modified_substring = Replace(modified_substring, text_to_replace, char_next & ChrW(&H93F)) ' ि
        End If
        position = InStr(position + 1, modified_substring, "l")
    Wend

    ' 3. Correcting the position of 'i' matra on half-letters.
    position = InStr(1, modified_substring, ChrW(&H93F) & ChrW(&H94D)) ' ि्
    While position > 0
        If position + 1 < Len(modified_substring) Then
            char_next = Mid(modified_substring, position + 2, 1)
            text_to_replace = ChrW(&H93F) & ChrW(&H94D) & char_next
            modified_substring = Replace(modified_substring, text_to_replace, ChrW(&H94D) & char_next & ChrW(&H93F))
        End If
        position = InStr(position + 2, modified_substring, ChrW(&H93F) & ChrW(&H94D))
    Wend

    ' 4. Handling the 'reph' character ({).
    set_of_matras = ChrW(&H93E) & " " & ChrW(&H93F) & " " & ChrW(&H940) & " " & ChrW(&H941) & " " & ChrW(&H942) & " " & ChrW(&H943) & " " & ChrW(&H947) & " " & ChrW(&H948) & " " & ChrW(&H94B) & " " & ChrW(&H94C) & " " & ChrW(&H902) & " " & ChrW(&H903) & " " & ChrW(&H901) & " " & ChrW(&H945)
    position = InStr(1, modified_substring, "{")

    While position > 0
        If position > 1 Then
            probable_pos = position - 1
            char_at_probable_pos = Mid(modified_substring, probable_pos, 1)
            
            While InStr(1, set_of_matras, char_at_probable_pos) > 0 And probable_pos > 1
                probable_pos = probable_pos - 1
                char_at_probable_pos = Mid(modified_substring, probable_pos, 1)
            Wend

            text_to_replace = Mid(modified_substring, probable_pos, position - probable_pos)
            new_replacement = ChrW(&H930) & ChrW(&H94D) & text_to_replace ' र्
            text_to_replace = text_to_replace & "{"
            
            modified_substring = Replace(modified_substring, text_to_replace, new_replacement)
        End If
        position = InStr(position + 1, modified_substring, "{")
    Wend
    
    ConvertPreetiText = modified_substring
End Function


' =========================================================================================
'                       MAIN SUBROUTINE (This is the one you run)
' =========================================================================================

Public Sub ConvertAndCopyPreetiToUnicode()
    ' A macro to convert selected Preeti text to Unicode and copy the result
    ' to the clipboard WITHOUT modifying the original document.

    If Not arrays_initialized Then
        InitializeConversionArrays
    End If

    ' --- Robust check for a valid text selection ---
    If Selection Is Nothing Then
        MsgBox "Please select the text you want to convert before running the macro.", vbInformation, "Preeti Converter"
        Exit Sub
    End If
    If Selection.Type = wdSelectionIP Or Selection.Characters.Count = 0 Then
        MsgBox "Please select the text you want to convert before running the macro.", vbInformation, "Preeti Converter"
        Exit Sub
    End If
    
    On Error GoTo ErrorHandler

    Application.ScreenUpdating = False

    Dim tempDoc As Document
    Dim originalRange As Range
    Set originalRange = Selection.Range
    
    ' 1. Copy the selection to a new, invisible document to work in a safe sandbox.
    originalRange.Copy
    Set tempDoc = Documents.Add(Visible:=False)
    tempDoc.Range.PasteAndFormat wdFormatOriginalFormatting
    
    Dim conversionRange As Range
    Set conversionRange = tempDoc.Content
    
    ' --- Perform the conversion inside the temporary document ---
    
    Dim segments() As FontSegment
    Dim segmentCount As Long: segmentCount = 0
    Dim currentFont As String
    Dim segmentText As String
    Dim i As Long
    Dim segmentStartIndex As Long
    
    ' Check if the temp doc has content before proceeding
    If conversionRange.Characters.Count > 0 Then
        currentFont = conversionRange.Characters(1).Font.Name
        segmentText = ""
        segmentStartIndex = 1

        For i = 1 To conversionRange.Characters.Count
            Dim charFont As String
            charFont = conversionRange.Characters(i).Font.Name

            If charFont <> currentFont Then
                segmentCount = segmentCount + 1
                ReDim Preserve segments(1 To segmentCount)
                segments(segmentCount).Text = segmentText
                segments(segmentCount).FontName = currentFont
                segments(segmentCount).StartIndex = segmentStartIndex
                segments(segmentCount).Length = Len(segmentText)

                segmentText = conversionRange.Characters(i).Text
                currentFont = charFont
                segmentStartIndex = i
            Else
                segmentText = segmentText & conversionRange.Characters(i).Text
            End If
        Next i
        
        segmentCount = segmentCount + 1
        ReDim Preserve segments(1 To segmentCount)
        segments(segmentCount).Text = segmentText
        segments(segmentCount).FontName = currentFont
        segments(segmentCount).StartIndex = segmentStartIndex
        segments(segmentCount).Length = Len(segmentText)

        For i = segmentCount To 1 Step -1
            If segments(i).FontName = "Preeti" Then
                Dim convertedText As String
                convertedText = ConvertPreetiText(segments(i).Text)

                Dim segmentRange As Range
                Set segmentRange = conversionRange.Characters(segments(i).StartIndex)
                segmentRange.MoveEnd Unit:=wdCharacter, Count:=segments(i).Length - 1
                
                segmentRange.Font.Name = "Mangal"
                segmentRange.Text = convertedText
            End If
        Next i
    End If
    
    ' 2. Copy the fully converted content from the temp document.
    tempDoc.Content.Select
    Selection.Copy

    ' 3. Close the temporary document without saving changes.
    tempDoc.Close SaveChanges:=wdDoNotSaveChanges
    Set tempDoc = Nothing ' Clear the object variable to prevent errors

    ' 4. Restore the user's original selection in the main document.
    originalRange.Select

    Application.ScreenUpdating = True
    MsgBox "The selected text has been converted to Unicode and copied to the clipboard. Your document has not been changed.", vbInformation, "Preeti Converter"

Exit Sub ' Exit before the error handler

ErrorHandler:
    ' Clean up in case of an error
    Application.ScreenUpdating = True
    If Not tempDoc Is Nothing Then
        tempDoc.Close SaveChanges:=wdDoNotSaveChanges
    End If
    MsgBox "An unexpected error occurred: " & Err.Description, vbCritical, "Error"
End Sub
